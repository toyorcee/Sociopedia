import mongoose from "mongoose";

const userIds = [
  new mongoose.Types.ObjectId(),
  new mongoose.Types.ObjectId(),
  new mongoose.Types.ObjectId(),
  new mongoose.Types.ObjectId(),
  new mongoose.Types.ObjectId(),
  new mongoose.Types.ObjectId(),
  new mongoose.Types.ObjectId(),
  new mongoose.Types.ObjectId(),
];

export const users = [
  {
    _id: userIds[0],
    firstName: "test",
    lastName: "me",
    email: "aaaaaaa@gmail.com",
    password: "$2b$10$dsasdgsagasda//G9JxQ4bQ8KXf4OAIe/X/AK9skyWUy",
    picturePath: "p11.jpeg",
    friends: [],
    location: "San Fran, CA",
    occupation: "Software Engineer",
    viewedProfile: 14561,
    impressions: 888822,
    createdAt: 1115211422,
    updatedAt: 1115211422,
    __v: 0,
  },
  {
    _id: userIds[1],
    firstName: "Steve",
    lastName: "Ralph",
    email: "thataaa@gmail.com",
    password: "$!FEAS@!O)_IDJda//G9JxQ4bQ8KXf4OAIe/X/AK9skyWUy",
    picturePath: "p3.jpeg",
    friends: [],
    location: "New York, CA",
    occupation: "Degenerate",
    viewedProfile: 12351,
    impressions: 55555,
    createdAt: 1595589072,
    updatedAt: 1595589072,
    __v: 0,
  },
  {
    _id: userIds[2],
    firstName: "Some",
    lastName: "Guy",
    email: "someguy@gmail.com",
    password: "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    picturePath: "p4.jpeg",
    friends: [],
    location: "Canada, CA",
    occupation: "Data Scientist Hacker",
    viewedProfile: 45468,
    impressions: 19986,
    createdAt: 1288090662,
    updatedAt: 1288090662,
    __v: 0,
  },
  {
    _id: userIds[3],
    firstName: "Whatcha",
    lastName: "Doing",
    email: "whatchadoing@gmail.com",
    password: "$2b$10$dsasdgsagasda//G9JxQ4bQ8KXf4OAIe/X/AK9skyWUy",
    picturePath: "p6.jpeg",
    friends: [],
    location: "Korea, CA",
    occupation: "Educator",
    viewedProfile: 41024,
    impressions: 55316,
    createdAt: 1219214568,
    updatedAt: 1219214568,
    __v: 0,
  },
  {
    _id: userIds[4],
    firstName: "Jane",
    lastName: "Doe",
    email: "janedoe@gmail.com",
    password: "$2b$10$dsasdgsagasda//G9JxQ4bQ8KXf4OAIe/X/AK9skyWUy",
    picturePath: "p5.jpeg",
    friends: [],
    location: "Utah, CA",
    occupation: "Hacker",
    viewedProfile: 40212,
    impressions: 7758,
    createdAt: 1493463661,
    updatedAt: 1493463661,
    __v: 0,
  },
  {
    _id: userIds[5],
    firstName: "Harvey",
    lastName: "Dunn",
    email: "harveydunn@gmail.com",
    password: "$2b$10$dsasdgsagasda//G9JxQ4bQ8KXf4OAIe/X/AK9skyWUy",
    picturePath: "p7.jpeg",
    friends: [],
    location: "Los Angeles, CA",
    occupation: "Journalist",
    viewedProfile: 976,
    impressions: 4658,
    createdAt: 1381326073,
    updatedAt: 1381326073,
    __v: 0,
  },
  {
    _id: userIds[6],
    firstName: "Carly",
    lastName: "Vowel",
    email: "carlyvowel@gmail.com",
    password: "$2b$10$dsasdgsagasda//G9JxQ4bQ8KXf4OAIe/X/AK9skyWUy",
    picturePath: "p8.jpeg",
    friends: [],
    location: "Chicago, IL",
    occupation: "Nurse",
    viewedProfile: 1510,
    impressions: 77579,
    createdAt: 1714704324,
    updatedAt: 1642716557,
    __v: 0,
  },
  {
    _id: userIds[7],
    firstName: "Jessica",
    lastName: "Dunn",
    email: "jessicadunn@gmail.com",
    password: "$2b$10$dsasdgsagasda//G9JxQ4bQ8KXf4OAIe/X/AK9skyWUy",
    picturePath: "p9.jpeg",
    friends: [],
    location: "Washington, DC",
    occupation: "A Student",
    viewedProfile: 19420,
    impressions: 82970,
    createdAt: 1369908044,
    updatedAt: 1359322268,
    __v: 0,
  },
];

export const posts = [
  {
    _id: new mongoose.Types.ObjectId(),
    userId: userIds[1],
    firstName: "Steve",
    lastName: "Ralph",
    location: "New York, CA",
    description: "Some really long random description",
    picturePath: "post1.jpeg",
    userPicturePath: "p3.jpeg",
    likes: new Map([
      [userIds[0], true],
      [userIds[2], true],
      [userIds[3], true],
      [userIds[4], true],
    ]),
    likeCount: 4, // Calculated from likes
    commentCount: 3,
    comments: [
      new mongoose.Types.ObjectId(), // Placeholder for actual Comment ObjectId
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
    ],
  },
  {
    _id: new mongoose.Types.ObjectId(),
    userId: userIds[3],
    firstName: "Whatcha",
    lastName: "Doing",
    location: "Korea, CA",
    description:
      "Another really long random description. This one is longer than the previous one.",
    picturePath: "post2.jpeg",
    userPicturePath: "p6.jpeg",
    likes: new Map([
      [userIds[7], true],
      [userIds[4], true],
      [userIds[1], true],
      [userIds[2], true],
    ]),
    likeCount: 4,
    commentCount: 4,
    comments: [
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
    ],
  },
  {
    _id: new mongoose.Types.ObjectId(),
    userId: userIds[4],
    firstName: "Jane",
    lastName: "Doe",
    location: "Utah, CA",
    description:
      "This is the last really long random description. This one is longer than the previous one.",
    picturePath: "post3.jpeg",
    userPicturePath: "p5.jpeg",
    likes: new Map([
      [userIds[1], true],
      [userIds[6], true],
      [userIds[3], true],
      [userIds[5], true],
    ]),
    likeCount: 4,
    commentCount: 5,
    comments: [
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
    ],
  },
  {
    _id: new mongoose.Types.ObjectId(),
    userId: userIds[5],
    firstName: "Harvey",
    lastName: "Dunn",
    location: "Los Angeles, CA",
    description:
      "This is the last really long random description. This one is longer than the previous one. Man I'm bored. I'm going to keep typing until I run out of things to say.",
    picturePath: "post4.jpeg",
    userPicturePath: "p7.jpeg",
    likes: new Map([
      [userIds[1], true],
      [userIds[6], true],
      [userIds[3], true],
    ]),
    likeCount: 3,
    commentCount: 6,
    comments: [
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
    ],
  },
  {
    _id: new mongoose.Types.ObjectId(),
    userId: userIds[6],
    firstName: "Carly",
    lastName: "Vowel",
    location: "Chicago, IL",
    description:
      "Just a short description. I'm tired of typing. I'm going to play video games now.",
    picturePath: "post5.jpeg",
    userPicturePath: "p8.jpeg",
    likes: new Map([
      [userIds[1], true],
      [userIds[3], true],
      [userIds[5], true],
      [userIds[7], true],
    ]),
    likeCount: 4,
    commentCount: 5,
    comments: [
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
    ],
  },
  {
    _id: new mongoose.Types.ObjectId(),
    userId: userIds[7],
    firstName: "Jessica",
    lastName: "Dunn",
    location: "Washington, DC",
    description:
      "For the last time, I'm going to play video games now. I'm tired of typing. I'm going to play video games now.",
    picturePath: "post6.jpeg",
    userPicturePath: "p9.jpeg",
    likes: new Map([
      [userIds[1], true],
      [userIds[2], true],
    ]),
    likeCount: 2,
    commentCount: 5,
    comments: [
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
      new mongoose.Types.ObjectId(),
    ],
  },
];

export const comments = [
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[0]._id,
    userId: userIds[2],
    text: "Looks like you’re having a blast!",
    createdAt: Date.now() - 100000,
    updatedAt: Date.now() - 100000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[0]._id,
    userId: userIds[3],
    text: "I second that!",
    createdAt: Date.now() - 80000,
    updatedAt: Date.now() - 80000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[0]._id,
    userId: userIds[4],
    text: "Why not invite us next time?",
    createdAt: Date.now() - 60000,
    updatedAt: Date.now() - 60000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[1]._id, // Linking to second post
    userId: userIds[5],
    text: "This post is on another level!",
    createdAt: Date.now() - 120000,
    updatedAt: Date.now() - 120000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[1]._id,
    userId: userIds[7],
    text: "Inspiring, as usual.",
    createdAt: Date.now() - 110000,
    updatedAt: Date.now() - 110000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[2]._id, // Linking to third post
    userId: userIds[3],
    text: "You always know just what to say!",
    createdAt: Date.now() - 130000,
    updatedAt: Date.now() - 130000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[2]._id,
    userId: userIds[1],
    text: "Let’s catch up soon.",
    createdAt: Date.now() - 100000,
    updatedAt: Date.now() - 100000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[2]._id,
    userId: userIds[6],
    text: "I'm waiting on the next post already!",
    createdAt: Date.now() - 90000,
    updatedAt: Date.now() - 90000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[3]._id, // Linking to fourth post
    userId: userIds[2],
    text: "True wisdom right here.",
    createdAt: Date.now() - 140000,
    updatedAt: Date.now() - 140000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[3]._id,
    userId: userIds[5],
    text: "This is spot on.",
    createdAt: Date.now() - 120000,
    updatedAt: Date.now() - 120000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[3]._id,
    userId: userIds[6],
    text: "Agreed!",
    createdAt: Date.now() - 80000,
    updatedAt: Date.now() - 80000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[4]._id, // Linking to fifth post
    userId: userIds[0],
    text: "Couldn’t agree more!",
    createdAt: Date.now() - 50000,
    updatedAt: Date.now() - 50000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[4]._id,
    userId: userIds[7],
    text: "This made my day.",
    createdAt: Date.now() - 40000,
    updatedAt: Date.now() - 40000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[4]._id,
    userId: userIds[1],
    text: "I can totally relate.",
    createdAt: Date.now() - 30000,
    updatedAt: Date.now() - 30000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[5]._id, // Linking to sixth post
    userId: userIds[3],
    text: "That's the spirit!",
    createdAt: Date.now() - 200000,
    updatedAt: Date.now() - 200000,
  },
  {
    _id: new mongoose.Types.ObjectId(),
    postId: posts[5]._id,
    userId: userIds[5],
    text: "Can I join next time?",
    createdAt: Date.now() - 100000,
    updatedAt: Date.now() - 100000,
  },
];

export const replys = [
  {
    _id: new mongoose.Types.ObjectId(),
    commentId: comments[0]._id, // Reference to the first comment
    userId: userIds[3], // User replying to the comment
    text: "I completely agree with your point!",
    createdAt: Date.now(),
    updatedAt: Date.now(),
    likes: new Map([
      [userIds[1], true],
      [userIds[4], true],
    ]),
    likeCount: 2, // Based on likes map
  },
];
